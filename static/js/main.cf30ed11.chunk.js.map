{"version":3,"sources":["components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","useState","inputData","setInputData","lists","localStorage","getItem","JSON","parse","getLocalData","items","setItems","myeditItem","setMyeditItem","toggleButton","setToggleButton","addItem","map","curElem","id","name","myNewInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","alt","type","placeholder","value","onChange","e","target","onKeyDown","event","keyCode","onClick","index","item_edited","find","editItem","updatedItems","filter","deleteItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAwIeA,EA3HE,WACb,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAZT,WACnB,IAAMG,EAAQC,aAAaC,QAAQ,cAEnC,OAAIF,EACKG,KAAKC,MAAMJ,GAEX,GAM4BK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAwCZ,oBAAS,GAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KAiBOC,EAAU,WACZ,GAAId,EAEE,GAAGA,GAAaY,EAClBH,EACID,EAAMO,KAAI,SAACC,GACT,OAAGA,EAAQC,KAAOP,EACP,2BAAKM,GAAZ,IAAqBE,KAAKlB,IAEvBgB,MAGbf,EAAa,IACbU,EAAc,MACdE,GAAgB,OAEf,CACD,IAAMM,EAAiB,CACnBF,IAAG,IAAIG,MAAOC,UAAUC,WACxBJ,KAAKlB,GAETS,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBlB,EAAa,SApBbsB,MAAM,sBAoDf,OAJFC,qBAAU,WACRrB,aAAasB,QAAQ,aAAcpB,KAAKqB,UAAUlB,MACjD,CAACA,IAGE,mCACA,qBAAKmB,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKC,IAAI,uBAAuBC,IAAI,aACpC,+DAGR,sBAAKF,UAAU,WAAf,UACI,uBAAOG,KAAK,OAAOC,YAAY,qBAAgBd,GAAG,UAAWU,UAAU,eAAeK,MAAOhC,EAC7FiC,SAAY,SAACC,GAAD,OAAMjC,EAAaiC,EAAEC,OAAOH,QAAQI,UAxEnC,SAACC,GACH,KAAlBA,EAAMC,SACPxB,OAwESF,EACH,mBAAGe,UAAU,sBAAsBY,QAASzB,EAASG,GAAG,UAExD,mBAAGU,UAAU,qBAAqBY,QAASzB,EAASG,GAAG,aAKzD,qBAAKU,UAAU,YAAf,SACCnB,EAAMO,KAAI,SAACC,GACR,OACK,sBAAKW,UAAU,WAAf,UACA,6BAAKX,EAAQE,OACb,sBAAKS,UAAU,WAAf,UACA,mBAAGA,UAAU,sBAAsBY,QAAS,kBAtD5C,SAACC,GACd,IAAMC,EAAcjC,EAAMkC,MAAK,SAAC1B,GAC5B,OAAOA,EAAQC,KAAOuB,KAE1BvC,EAAawC,EAAYvB,MACzBP,EAAc6B,GACd3B,GAAgB,GAgD6C8B,CAAS3B,EAAQC,OACjE,mBAAGU,UAAU,2BAA2BY,QAAS,kBA7ChD,SAACC,GACf,IAAMI,EAAepC,EAAMqC,QAAO,SAAC7B,GAC/B,OAAOA,EAAQC,KAAOuB,KAE1B/B,EAASmC,GAyCyDE,CAAW9B,EAAQC,YAJxCD,EAAQC,SAWnD,qBAAKU,UAAU,YAAf,SACE,wBACEA,UAAU,eACV,oBAAkB,aAAaY,QA/CvB,WACd9B,EAAS,KA4CL,SAGE,2DCjHCsC,G,MATH,WAEV,OACE,mCACE,cAAC,EAAD,QCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cf30ed11.chunk.js","sourcesContent":["import React, {useState,useEffect } from 'react';\r\n\r\n// get the localStorage data back\r\nconst getLocalData = () => {\r\n  const lists = localStorage.getItem(\"mytodolist\");\r\n\r\n  if (lists) {\r\n    return JSON.parse(lists);\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nconst TodoList = () => {\r\n    const [inputData, setInputData] = useState('');\r\n    const [items, setItems] = useState(getLocalData());\r\n    const [myeditItem, setMyeditItem] = useState(\"\");\r\n    const [toggleButton, setToggleButton] = useState(false);\r\n     \r\n\r\n    //  const input = document.getElementById('myInput').value;\r\n    //  input.addEventListner(\"keyup\",function(event){\r\n    //    if(event.keycode === 13){\r\n    //      event.preventDefault();\r\n    //     return document.getElementById('myBtn').addItem();\r\n    //    }\r\n    //  });\r\n     const onKeyDownHandler= (event) =>{\r\n      if(event.keyCode === 13){\r\n        addItem();\r\n      };\r\n    };\r\n    //  Additem function\r\n\r\n     const addItem = () =>{\r\n         if(!inputData){\r\n             alert(\"plz fill the data\");\r\n         }else if(inputData && toggleButton){\r\n             setItems(\r\n                 items.map((curElem)=>{\r\n                   if(curElem.id === myeditItem){\r\n                       return { ...curElem, name:inputData };\r\n                   }\r\n                   return curElem;\r\n                 })\r\n             );\r\n             setInputData(\"\");\r\n             setMyeditItem(null);\r\n             setToggleButton(false);\r\n              \r\n         }else{\r\n             const myNewInputData = {\r\n                 id:new Date().getTime().toString(),\r\n                 name:inputData,\r\n             };\r\n             setItems([...items, myNewInputData]);\r\n             setInputData(\"\");\r\n         }\r\n     };\r\n\r\n    //  Edit the items\r\n    const editItem = (index) =>{\r\n        const item_edited = items.find((curElem)=>{\r\n            return curElem.id === index;\r\n        });\r\n        setInputData(item_edited.name);\r\n        setMyeditItem(index);\r\n        setToggleButton(true);\r\n    };\r\n    \r\n    // delete the items\r\n    const deleteItem =(index)=>{\r\n        const updatedItems = items.filter((curElem)=>{\r\n            return curElem.id !== index;\r\n        });\r\n        setItems(updatedItems);\r\n    }\r\n\r\n    // remove all items\r\n    const removeAll = () =>{\r\n        setItems([]);\r\n    }\r\n\r\n    // adding localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"mytodolist\", JSON.stringify(items));\r\n  }, [items]);\r\n\r\n    return (\r\n        <>\r\n        <div className=\"main-div\">\r\n            <div className=\"child-div\">\r\n                <figure>\r\n                    <img src=\"../images/todo1.jpeg\" alt=\"todoLogo\" />\r\n                    <figcaption>Add Your List Here</figcaption>\r\n                </figure>\r\n\r\n            <div className=\"addItems\">\r\n                <input type=\"text\" placeholder=\"✍ Add Item...\" id=\"myInput\"  className=\"form-control\" value={inputData}\r\n                onChange = {(e)=> setInputData(e.target.value)} onKeyDown ={onKeyDownHandler}/>\r\n\r\n                {toggleButton ? (\r\n              <i className=\"far fa-edit add-btn\" onClick={addItem} id=\"myBtn\"></i>\r\n              ) : (\r\n              <i className=\"fa fa-plus add-btn\" onClick={addItem} id=\"myBtn\"></i>\r\n              )}\r\n           </div>\r\n\r\n            {/* show our Items */}\r\n            <div className=\"showItems\">\r\n            {items.map((curElem)=>{\r\n                return(\r\n                     <div className=\"eachItem\" key ={curElem.id}>\r\n                     <h3>{curElem.name}</h3>\r\n                     <div className=\"todo-btn\">\r\n                     <i className=\"far fa-edit add-btn\" onClick={()=>editItem(curElem.id)}></i>\r\n                     <i className=\"far fa-trash-alt add-btn\" onClick={()=>deleteItem(curElem.id)}></i>\r\n                 </div>\r\n              </div>\r\n            );  \r\n            })}\r\n          </div>\r\n\r\n          <div className=\"showItems\">\r\n            <button\r\n              className=\"btn effect04\"\r\n              data-sm-link-text=\"Remove All\" onClick ={removeAll}>\r\n              <span> CHECK LIST</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoList\r\n","import React from 'react';\nimport TodoList from './components/TodoList';\n import \"./style.css\";\n\n\nconst App = () => {\n  \n  return(\n    <>\n      <TodoList />\n    </>\n  )\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}